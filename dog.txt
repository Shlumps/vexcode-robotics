/*----------------------------------------------------------------------------*/

/*                                                                            */

/*    Module:       main.cpp                                                  */

/*    Author:       C:\Users\wyattrose                                        */

/*    Created:      Fri Feb 28 2020                                           */

/*    Description:  V5 project                                                */

/*                                                                            */

/*----------------------------------------------------------------------------*/



// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// LeftMotor            motor         2               
// RightMotor           motor         10              
// ClawMotor            motor         8               
// ArmMotor             motor         9               
// Vision1              vision        3               
// ---- END VEXCODE CONFIGURED DEVICES ----
           


#include "vex.h"

//Vision Motion Tests "Agressive Retriever"



//Robot will search for the object selected and "retrieve It!"

void moveFwd();

void moveRev();

void turnLeft();

void turnRight();

void stopRobot();





//Global Variables

int centerFOVX = 102;//try 158

int centerFOVY = 172;//try 106

int offsetX = 20;

int offsetY = 5;

int driveSpeed = 10;



//for future program /int armSpeed = 20;

//for future program /int numDegrees = 200;



using namespace vex;





int main() {

  // Initializing Robot Configuration. DO NOT REMOVE!

  vexcodeInit();

  ClawMotor.spin(directionType::rev);
  task::sleep(2000);
  ClawMotor.stop(brakeType::coast);

  while(true){//alwaysrun

    Brain.Screen.clearScreen();

    Brain.Screen.setOrigin(1,1);

    Brain.Screen.setPenColor(color::white);

    Brain.Screen.drawRectangle(82,30,316,212); //Draw the visionSensor feild of veiw

    //Take Snap Shots for ball
    Vision1.takeSnapshot(Vision1__SIG_1);

    //draw what the Vision Sensor Sees
    Brain.Screen.drawCircle(Vision1.largestObject.originX+82,Vision1.largestObject.originY+30,Vision1.largestObject.width, color::red);
    if(Vision1.largestObject.exists&&Vision1.largestObject.width>5){
      //Calculate X & Y velocities from VisionSense to go to Motors
      //Create local variables
      int velX = ((Vision1.largestObject.originX - 158)*0.6);
      int velY = ((Vision1.largestObject.originY - 190)*0.6);
      //Keep robot fixed on Red
      LeftMotor.spin(directionType::fwd,(velY -velX)/2,velocityUnits::pct);
      RightMotor.spin(directionType::fwd,(velY + velX)/2,velocityUnits::pct);
      task::sleep(100);
    }//End of First IF Statement

    if(Vision1.largestObject.exists){
      if(Vision1.largestObject.centerX < centerFOVX - offsetX){

        turnLeft();//return object to center feild of View

      }//End of else If

      else if(Vision1.largestObject.centerX > centerFOVX + offsetY){
        turnRight();//return object to center feild of veiw
      }//end of if
      
      else if(Vision1.largestObject.centerY > centerFOVY + offsetY){
        moveFwd();//function
      }//end of esle if

      else if(Vision1.largestObject.centerY < centerFOVY - offsetY){
        moveRev();//function
      }//end of else if
      
      else{
        stopRobot();//function
      }//end of else
      task::sleep(20);//SPD Slow Program Dow
    }//End of second Else
  }//End of while true loop
}//end of main line

//Functions below
void moveFwd(){
  //Driver forward at a specific set speed
  LeftMotor.spin(directionType::fwd,driveSpeed,velocityUnits::pct);//set motor speed to said variable
  RightMotor.spin(directionType::fwd,driveSpeed,velocityUnits::pct);//set motor speed to said variable
}//end of moveFwd Void

void moveRev(){
  //Driver backwards at a specific set speed
  LeftMotor.spin(directionType::rev,driveSpeed,velocityUnits::pct);//set motor speed to said variable
  RightMotor.spin(directionType::rev,driveSpeed,velocityUnits::pct);//set motor speed to said variable
}//end of moveRev Void

void turnLeft(){
  //turn motors to the left untilobject is in the center of the robots FOV
  LeftMotor.spin(directionType::rev,driveSpeed,velocityUnits::pct);//set motor speed to said variable
  RightMotor.spin(directionType::fwd,driveSpeed,velocityUnits::pct);//set motor speed to said variable
}//end of turn left function

void turnRight(){
  //Turn motors to the right until object is in the center of the robots FOV
  LeftMotor.spin(directionType::fwd,driveSpeed,velocityUnits::pct);//set motor speed to said variable
  RightMotor.spin(directionType::rev,driveSpeed,velocityUnits::pct);//set motor speed to said variable
}//end of turn right function

void stopRobot(){
  //stops all motors and pause
  LeftMotor.stop(brakeType::coast);//set motor speed to said variable
  RightMotor.stop(brakeType::coast);//set motor speed to said variable
  ClawMotor.spin(directionType::fwd);
  task::sleep(400);
  ClawMotor.spin(directionType::rev);
  task::sleep(400);
}//end of stop void


/*
/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       C:\Users\wyattrose                                        */
/*    Created:      Fri Mar 06 2020                                           */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// LeftMotor            motor         2               
// RightMotor           motor         10              
// ArmMotor             motor         9               
// ClawMotor            motor         8               
// ---- END VEXCODE CONFIGURED DEVICES ----

#include "vex.h"

using namespace vex;

class Movement {
  private:
    motor leftM;
    motor rightM;
    motor armM;
    motor clawM;
  public:
    Movement(motor leftMotor, motor rightMotor, motor armMotor, motor clawMotor) :  leftM(leftMotor), rightM(rightMotor), armM(armMotor), clawM(clawMotor) {
      Brain.Screen.print("Movement instance initialized\n");
    }

    void fwd(int speed) { // spins the left and right motors fwd untill interrupted
      LeftMotor.spin(directionType::fwd, speed, velocityUnits::pct);
      RightMotor.spin(directionType::fwd, speed, velocityUnits::pct);
    }

    void rev(int speed) { // spins the left and right motors rev untill interrupted
      LeftMotor.spin(directionType::rev, speed, velocityUnits::pct);
      RightMotor.spin(directionType::rev, speed, velocityUnits::pct);
    }

    void left(int speed) { // turns the robot left, rotates in place
      LeftMotor.spin(directionType::rev, speed, velocityUnits::pct);
      RightMotor.spin(directionType::fwd, speed, velocityUnits::pct);
    }
    
    void right(int speed) { // turns the robot right, rotates in place
      
    }

    void lift() { // lifts the robot's arm

    }

    void lower() { // lowers the robot's arm

    }

    void close() { // closes the robot's claw

    }

    void open() { // open's the robot's claw

    }
};    

int main() {
  // Initializing Robot Configuration. DO NOT REMOVE!
  vexcodeInit();
  Movement mov(LeftMotor, RightMotor, ArmMotor, ClawMotor);
}

*/
